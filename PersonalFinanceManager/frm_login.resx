<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="login_icon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>